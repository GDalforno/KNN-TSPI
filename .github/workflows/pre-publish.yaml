name: Check for stable package version

on:
  push:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  pre-publish:
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Set up cache
        uses: actions/cache@v2
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Lint
        run: |
          source .venv/bin/activate
          ruff check knn_tspi/
          mypy knn_tspi/ --explicit-package-bases --install-types --non-interactive
      - name: Test
        run: |
          source .venv/bin/activate
          pytest --cov -vv -W ignore --cov-fail-under=90 --cov-report=xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - uses: AppThreat/sast-scan-action@master
        with:
          type: "python"
          src: "/github/workspace/knn_tspi"
